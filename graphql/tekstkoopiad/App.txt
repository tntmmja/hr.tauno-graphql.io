async function login(username, password) {
    const headers = new Headers();
    headers.set('Authorization', 'Basic ' + btoa(username + ":" + password));
    const jwt = await fetch("https://01.kood.tech/api/auth/signin", {
        method: "POST",
        headers: headers,
    })
    .then((response) => {return response.json()});
    
    headers.set('Authorization', 'Bearer ' + jwt);
    return headers;
}

async function fetchUserData(headers) {
    const data = await fetch("https://01.kood.tech/api/graphql-engine/v1/graphql", {
        method: "POST",
        headers: headers,
        body: JSON.stringify({
            query: `
            {
                user {
                    id
                    login
                }
            }`,
        }),
    })
    .then((res) => {return res.json()});
    
    return data;
}


// Fetch the sum of XP for a user
async function fetchUserXP(headers, userId) {
    return fetch("https://01.kood.tech/api/graphql-engine/v1/graphql", {
      method: "POST",
      headers: headers,
      body: JSON.stringify({
        query: `
        {
          transaction_aggregate(where: {userId: {_eq: ${userId}}}) {
            aggregate {
              sum {
                amount
              }
            }
          }
        }
        `,
      }),
    })
    .then((res) => {return res.json()})
}




async function fetchUserUpTransactions(headers, userId) {
    return fetch("https://01.kood.tech/api/graphql-engine/v1/graphql", {
      method: "POST",
      headers: headers,
      body: JSON.stringify({
        query: `
        {
          transaction_aggregate(where: {userId: {_eq: ${userId}}, type: {_eq: "up"}}) {
            aggregate {
               count
            }
          }
        }
        `,
      }),
    })
    .then((res) => {return res.json()})
}

async function fetchUserDownTransactions(headers, userId) {
    return fetch("https://01.kood.tech/api/graphql-engine/v1/graphql", {
      method: "POST",
      headers: headers,
      body: JSON.stringify({
        query: `
        {
          transaction_aggregate(where: {userId: {_eq: ${userId}}, type: {_eq: "down"}}) {
            aggregate {
             count
            }
          }
        }
        `,
      }),
    })
    .then((res) => {return res.json()})
}

async function fetchUserAuditRatio(headers, userId) {
    const upTransactions = await fetchUserUpTransactions(headers, userId);
    const downTransactions = await fetchUserDownTransactions(headers, userId);

    if (!upTransactions.errors && !downTransactions.errors) {
      const auditMade = upTransactions.data.transaction_aggregate.aggregate.count;
      const auditReceived = downTransactions.data.transaction_aggregate.aggregate.count;
      const ratio = auditMade / auditReceived;
      return { auditMade, auditReceived, ratio };
    } else {
      return null;
    }
}